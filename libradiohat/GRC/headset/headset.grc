options:
  parameters:
    author: ''
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: headset
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: ''
    window_size: 1400,640
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [0, 4]
    rotation: 0
    state: enabled

blocks:
- name: HPF
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: RXTXTabs@0:1,1
    label: Low pass
    min_len: '200'
    orient: Qt.Horizontal
    rangeType: float
    start: '300'
    step: '50'
    stop: '3000'
    value: '2750'
    widget: counter
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1016, 4]
    rotation: 0
    state: enabled
- name: LPF
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: RXTXTabs@0:1,0
    label: High pass
    min_len: '200'
    orient: Qt.Horizontal
    rangeType: float
    start: '50'
    step: '10'
    stop: '1000'
    value: '50'
    widget: counter
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [904, 4]
    rotation: 0
    state: enabled
- name: MuteMic
  id: variable_qtgui_check_box
  parameters:
    comment: ''
    'false': '0'
    gui_hint: RXTXTabs@1:0,2
    label: Mute Mic
    'true': '1'
    type: real
    value: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [328, 4]
    rotation: 0
    state: enabled
- name: TXTone
  id: variable_qtgui_check_box
  parameters:
    comment: ''
    'false': '0'
    gui_hint: RXTXTabs@2:0,3
    label: Tone to TX
    'true': '1'
    type: real
    value: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [328, 28]
    rotation: 0
    state: enabled
- name: ToneFreq
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: RXTXTabs@2:0,1
    label: Tone Freq
    min_len: '1'
    orient: Qt.Vertical
    rangeType: float
    start: '10'
    step: '10'
    stop: '10000'
    value: '1000'
    widget: counter
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [560, 4]
    rotation: 0
    state: enabled
- name: ToneLevel
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: 'RXTXTabs@2: 0,0'
    label: Tone Level
    min_len: '1'
    orient: Qt.Vertical
    rangeType: float
    start: '0'
    step: '.01'
    stop: '1'
    value: '0.25'
    widget: counter
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [456, 4]
    rotation: 0
    state: enabled
- name: Volume
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: RXTXTabs@0:0,0
    label: Gain
    min_len: '0'
    orient: Qt.Vertical
    rangeType: float
    start: '0'
    step: '.01'
    stop: '0.5'
    value: '0.1'
    widget: dial
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [776, 4]
    rotation: 0
    state: enabled
- name: agcGain
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: RXTXTabs@0:0,1
    label: Volume
    min_len: '5'
    orient: Qt.Vertical
    rangeType: float
    start: '0.03'
    step: '.01'
    stop: '5'
    value: '1'
    widget: dial
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [672, 4]
    rotation: 0
    state: enabled
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '48000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 68]
    rotation: 0
    state: enabled
- name: MuteIfNotRX
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\nfrom gpiozero import Button\nimport RPi.GPIO as GPIO\n\
      \n\nclass blk(gr.sync_block):  # other base classes are basic_block, decim_block,\
      \ interp_block\n    \"\"\"Embedded Python Block example - a simple multiply\
      \ const\"\"\"\n\n\n    def __init__(self, example_param=22):  # only default\
      \ arguments here\n        \"\"\"arguments to this function show up as parameters\
      \ in GRC\"\"\"\n        gr.sync_block.__init__(\n            self,\n       \
      \     name='Embedded Python Block',   # will show up in GRC\n            in_sig=[np.float32],\n\
      \            out_sig=[np.float32]\n        )\n        # if an attribute with\
      \ the same name as a parameter is found,\n        # a callback is registered\
      \ (properties work, too).\n        self.example_param = example_param\n    \
      \    GPIO.setwarnings(False)\n        GPIO.setmode(GPIO.BCM)\n        GPIO.setup(self.example_param,\
      \ GPIO.OUT)\n\n\n    def work(self, input_items, output_items):\n        \"\"\
      \"example: multiply with constant\"\"\"\n#        output_items[0][:] = input_items[0]\
      \ * self.example_param\n        if GPIO.input(self.example_param):\n       \
      \     output_items[0][:] = 0\n        else:\n            output_items[0][:]\
      \ = input_items[0] * 1.0\n        return len(output_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    example_param: '23'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('Embedded Python Block', 'blk', [('example_param', '22')], [('0',
      'float', 1)], [('0', 'float', 1)], 'Embedded Python Block example - a simple
      multiply const', ['example_param'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [912, 252]
    rotation: 0
    state: enabled
- name: MuteIfNotSK
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\nfrom gpiozero import Button\nimport RPi.GPIO as GPIO\n\
      \n\nclass blk(gr.sync_block):  # other base classes are basic_block, decim_block,\
      \ interp_block\n    \"\"\"Embedded Python Block example - a simple multiply\
      \ const\"\"\"\n\n\n    def __init__(self, example_param=22):  # only default\
      \ arguments here\n        \"\"\"arguments to this function show up as parameters\
      \ in GRC\"\"\"\n        gr.sync_block.__init__(\n            self,\n       \
      \     name='Embedded Python Block',   # will show up in GRC\n            in_sig=[np.complex64],\n\
      \            out_sig=[np.complex64]\n        )\n        # if an attribute with\
      \ the same name as a parameter is found,\n        # a callback is registered\
      \ (properties work, too).\n        self.example_param = example_param\n    \
      \    GPIO.setwarnings(False)\n        GPIO.setmode(GPIO.BCM)\n        GPIO.setup(self.example_param,\
      \ GPIO.IN,pull_up_down=GPIO.PUD_UP )\n\n\n    def work(self, input_items, output_items):\n\
      \        \"\"\"example: multiply with constant\"\"\"\n#        output_items[0][:]\
      \ = input_items[0] * self.example_param\n        if GPIO.input(self.example_param):\n\
      \            output_items[0][:] = 0\n        else:\n            output_items[0][:]\
      \ = input_items[0] * 1.0\n        return len(output_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    example_param: '26'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('Embedded Python Block', 'blk', [('example_param', '22')], [('0',
      'complex', 1)], [('0', 'complex', 1)], 'Embedded Python Block example - a simple
      multiply const', ['example_param'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [552, 428]
    rotation: 0
    state: bypassed
- name: MuteIfNotTX
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\nfrom gpiozero import Button\nimport RPi.GPIO as GPIO\n\
      \n\nclass blk(gr.sync_block):  # other base classes are basic_block, decim_block,\
      \ interp_block\n    \"\"\"Embedded Python Block example - a simple multiply\
      \ const\"\"\"\n\n\n    def __init__(self, example_param=22):  # only default\
      \ arguments here\n        \"\"\"arguments to this function show up as parameters\
      \ in GRC\"\"\"\n        gr.sync_block.__init__(\n            self,\n       \
      \     name='Embedded Python Block',   # will show up in GRC\n            in_sig=[np.float32],\n\
      \            out_sig=[np.float32]\n        )\n        # if an attribute with\
      \ the same name as a parameter is found,\n        # a callback is registered\
      \ (properties work, too).\n        self.example_param = example_param\n    \
      \    GPIO.setwarnings(False)\n        GPIO.setmode(GPIO.BCM)\n        GPIO.setup(self.example_param,\
      \ GPIO.OUT)\n\n\n    def work(self, input_items, output_items):\n        \"\"\
      \"example: multiply with constant\"\"\"\n#        output_items[0][:] = input_items[0]\
      \ * self.example_param\n        if GPIO.input(self.example_param):\n       \
      \     output_items[0][:] = 0\n        else:\n            output_items[0][:]\
      \ = input_items[0] * 1.0\n        return len(output_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    example_param: '22'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('Embedded Python Block', 'blk', [('example_param', '22')], [('0',
      'float', 1)], [('0', 'float', 1)], 'Embedded Python Block example - a simple
      multiply const', ['example_param'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [56, 348]
    rotation: 0
    state: enabled
- name: RXTXTabs
  id: qtgui_tab_widget
  parameters:
    alias: ''
    comment: ''
    gui_hint: ''
    label0: Receiver
    label1: Transmitter
    label10: Tab 10
    label11: Tab 11
    label12: Tab 12
    label13: Tab 13
    label14: Tab 14
    label15: Tab 15
    label16: Tab 16
    label17: Tab 17
    label18: Tab 18
    label19: Tab 19
    label2: TX Tone
    label3: Tab 3
    label4: Tab 4
    label5: Tab 5
    label6: Tab 6
    label7: Tab 7
    label8: Tab 8
    label9: Tab 9
    num_tabs: '3'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [168, 4]
    rotation: 0
    state: enabled
- name: analog_agc2_xx_0
  id: analog_agc2_xx
  parameters:
    affinity: ''
    alias: ''
    attack_rate: 1e-3
    comment: ''
    decay_rate: 1e-2
    gain: '1.0'
    max_gain: agcGain
    maxoutbuf: '0'
    minoutbuf: '0'
    reference: '1.7'
    type: float
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [760, 220]
    rotation: 0
    state: enabled
- name: analog_agc2_xx_1
  id: analog_agc2_xx
  parameters:
    affinity: ''
    alias: ''
    attack_rate: 1e-1
    comment: ''
    decay_rate: 1e0
    gain: '0.8'
    max_gain: '8'
    maxoutbuf: '0'
    minoutbuf: '0'
    reference: '.8'
    type: float
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [264, 316]
    rotation: 0
    state: enabled
- name: analog_sig_source_x_0
  id: analog_sig_source_x
  parameters:
    affinity: ''
    alias: ''
    amp: ToneLevel * TXTone
    comment: ''
    freq: ToneFreq
    maxoutbuf: '0'
    minoutbuf: '0'
    offset: '0'
    phase: '0'
    samp_rate: samp_rate
    type: float
    waveform: analog.GR_COS_WAVE
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 492]
    rotation: 0
    state: enabled
- name: audio_sink_0
  id: audio_sink
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    device_name: hw:RadioHatCodec,0
    num_inputs: '2'
    ok_to_block: 'True'
    samp_rate: samp_rate
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1224, 336]
    rotation: 0
    state: enabled
- name: audio_source_0
  id: audio_source
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    device_name: hw:RadioHatCodec,1
    maxoutbuf: '0'
    minoutbuf: '0'
    num_outputs: '2'
    ok_to_block: 'True'
    samp_rate: samp_rate
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [0, 240]
    rotation: 0
    state: enabled
- name: band_pass_filter_0
  id: band_pass_filter
  parameters:
    affinity: ''
    alias: ''
    beta: '6.76'
    comment: ''
    decim: '1'
    gain: Volume
    high_cutoff_freq: HPF
    interp: '1'
    low_cutoff_freq: LPF
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate
    type: fir_filter_fff
    width: '100'
    win: firdes.WIN_HAMMING
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [600, 196]
    rotation: 0
    state: enabled
- name: band_pass_filter_1
  id: band_pass_filter
  parameters:
    affinity: ''
    alias: ''
    beta: '6.76'
    comment: ''
    decim: '1'
    gain: '1'
    high_cutoff_freq: '3000'
    interp: '1'
    low_cutoff_freq: '100'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate
    type: interp_fir_filter_fff
    width: '100'
    win: firdes.WIN_BLACKMAN
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [344, 452]
    rotation: 0
    state: enabled
- name: blocks_add_xx_0
  id: blocks_add_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [528, 240]
    rotation: 0
    state: enabled
- name: blocks_add_xx_1
  id: blocks_add_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [264, 496]
    rotation: 0
    state: enabled
- name: blocks_add_xx_1_0
  id: blocks_add_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1136, 256]
    rotation: 0
    state: enabled
- name: blocks_add_xx_1_1
  id: blocks_add_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1136, 352]
    rotation: 0
    state: enabled
- name: blocks_complex_to_imag_0
  id: blocks_complex_to_imag
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [384, 272]
    rotation: 0
    state: enabled
- name: blocks_complex_to_imag_1
  id: blocks_complex_to_imag
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [728, 496]
    rotation: 0
    state: enabled
- name: blocks_complex_to_real_0
  id: blocks_complex_to_real
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [384, 240]
    rotation: 0
    state: enabled
- name: blocks_complex_to_real_1
  id: blocks_complex_to_real
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [728, 528]
    rotation: 0
    state: enabled
- name: blocks_float_to_complex_0
  id: blocks_float_to_complex
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [272, 152]
    rotation: 0
    state: enabled
- name: blocks_mute_xx_1
  id: blocks_mute_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    mute: MuteMic
    type: float
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [144, 424]
    rotation: 0
    state: enabled
- name: blocks_throttle_0
  id: blocks_throttle
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    ignoretag: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_second: samp_rate
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [848, 164.0]
    rotation: 0
    state: true
- name: blocks_throttle_0_0
  id: blocks_throttle
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    ignoretag: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_second: samp_rate
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [504, 380.0]
    rotation: 0
    state: true
- name: hilbert_fc_0
  id: hilbert_fc
  parameters:
    affinity: ''
    alias: ''
    beta: '6.76'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_taps: '131'
    win: firdes.WIN_HAMMING
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [264, 268]
    rotation: 0
    state: enabled
- name: hilbert_fc_1
  id: hilbert_fc
  parameters:
    affinity: ''
    alias: ''
    beta: '6.76'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_taps: '131'
    win: firdes.WIN_HAMMING
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [264, 236]
    rotation: 0
    state: enabled
- name: hilbert_fc_1_0
  id: hilbert_fc
  parameters:
    affinity: ''
    alias: ''
    beta: '6.76'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_taps: '301'
    win: firdes.WIN_HAMMING
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [512, 508]
    rotation: 0
    state: enabled
- name: low_pass_filter_0
  id: low_pass_filter
  parameters:
    affinity: ''
    alias: ''
    beta: '6.76'
    comment: ''
    cutoff_freq: '3000'
    decim: '1'
    gain: '1'
    interp: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate
    type: fir_filter_fff
    width: '100'
    win: firdes.WIN_KAISER
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [928, 308]
    rotation: 0
    state: enabled
- name: low_pass_filter_0_0
  id: low_pass_filter
  parameters:
    affinity: ''
    alias: ''
    beta: '6.76'
    comment: ''
    cutoff_freq: '3000'
    decim: '1'
    gain: '1'
    interp: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate
    type: fir_filter_fff
    width: '100'
    win: firdes.WIN_KAISER
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [928, 476]
    rotation: 0
    state: enabled
- name: qtgui_freq_sink_x_0
  id: qtgui_freq_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    average: '0.2'
    axislabels: 'True'
    bw: samp_rate
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    ctrlpanel: 'False'
    fc: '0'
    fftsize: '1024'
    freqhalf: 'True'
    grid: 'True'
    gui_hint: RXTXTabs@0:2,0,1,2
    label: level
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'False'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '""'
    nconnections: '1'
    showports: 'True'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_tag: '""'
    type: complex
    units: dBm
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    wintype: firdes.WIN_BLACKMAN_hARRIS
    ymax: '-20'
    ymin: '-110'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [432, 148]
    rotation: 0
    state: enabled
- name: qtgui_time_sink_x_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'False'
    grid: 'True'
    gui_hint: RXTXTabs@1:0,0,1,1
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'False'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '1'
    size: '1024'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.05'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1160, 508]
    rotation: 0
    state: enabled

connections:
- [MuteIfNotRX, '0', blocks_add_xx_1_0, '0']
- [MuteIfNotRX, '0', blocks_add_xx_1_1, '0']
- [MuteIfNotSK, '0', blocks_complex_to_imag_1, '0']
- [MuteIfNotSK, '0', blocks_complex_to_real_1, '0']
- [MuteIfNotTX, '0', analog_agc2_xx_1, '0']
- [analog_agc2_xx_0, '0', blocks_throttle_0, '0']
- [analog_agc2_xx_1, '0', blocks_mute_xx_1, '0']
- [analog_sig_source_x_0, '0', blocks_add_xx_1, '1']
- [audio_source_0, '0', MuteIfNotTX, '0']
- [audio_source_0, '0', blocks_float_to_complex_0, '1']
- [audio_source_0, '0', hilbert_fc_1, '0']
- [audio_source_0, '1', blocks_float_to_complex_0, '0']
- [audio_source_0, '1', hilbert_fc_0, '0']
- [band_pass_filter_0, '0', analog_agc2_xx_0, '0']
- [band_pass_filter_1, '0', hilbert_fc_1_0, '0']
- [blocks_add_xx_0, '0', band_pass_filter_0, '0']
- [blocks_add_xx_1, '0', band_pass_filter_1, '0']
- [blocks_add_xx_1_0, '0', audio_sink_0, '0']
- [blocks_add_xx_1_1, '0', audio_sink_0, '1']
- [blocks_complex_to_imag_0, '0', blocks_add_xx_0, '1']
- [blocks_complex_to_imag_1, '0', low_pass_filter_0, '0']
- [blocks_complex_to_real_0, '0', blocks_add_xx_0, '0']
- [blocks_complex_to_real_1, '0', low_pass_filter_0_0, '0']
- [blocks_float_to_complex_0, '0', qtgui_freq_sink_x_0, '0']
- [blocks_mute_xx_1, '0', blocks_add_xx_1, '0']
- [blocks_throttle_0, '0', MuteIfNotRX, '0']
- [blocks_throttle_0_0, '0', MuteIfNotSK, '0']
- [hilbert_fc_0, '0', blocks_complex_to_imag_0, '0']
- [hilbert_fc_1, '0', blocks_complex_to_real_0, '0']
- [hilbert_fc_1_0, '0', blocks_throttle_0_0, '0']
- [low_pass_filter_0, '0', blocks_add_xx_1_0, '1']
- [low_pass_filter_0_0, '0', blocks_add_xx_1_1, '1']
- [low_pass_filter_0_0, '0', qtgui_time_sink_x_0, '0']

metadata:
  file_format: 1
